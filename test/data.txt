# alignta.vim test suite

#=============================================================================
# Region

#---------------------------------------
# TEST_REGION_DATA_BEGIN
word wo|rd word word wo|rd

 word word word word wo|rd

単語 単語 単語 単語 単語

 単語 単語 単語 単語 単語
# TEST_REGION_DATA_END

#---------------------------------------
# TEST_REGION_BLOCK_DATA_BEGIN
*** word wo|rd word word wo|rd ***

***  word word word word wo|rd ***

*** 単語 単語 単語 単語 単語   ***

***  単語 単語 単語 単語 単語  ***
# TEST_REGION_BLOCK_DATA_END

#-----------------------------------------------------------------------------
# has_tab

#---------------------------------------
# TEST_REGION_HAS_TAB_DATA_BEGIN
word	wo|rd	word	word	wo|rd

	word	word	word	word	wo|rd

単語	単語	単語	単語	単語

	単語	単語	単語	単語	単語
# TEST_REGION_HAS_TAB_DATA_END

#---------------------------------------
# TEST_REGION_BLOCK_HAS_TAB_DATA_BEGIN
***	word	wo|rd	word	word	wo|rd ***

***	word	word	word	word	wo|rd ***

***	単語	単語	単語	単語	単語  ***

***	単語	単語	単語	単語	単語  ***
# TEST_REGION_BLOCK_HAS_TAB_DATA_END

#=============================================================================
# Padding Alignment

#---------------------------------------
# TEST_ALIGN_1_PATTERN_DATA_BEGIN
  a = 1
  bbb = 10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_DATA_END
# TEST_ALIGN_1_PATTERN_EXPECTED_BEGIN
  a     = 1
  bbb   = 10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_LLL_DATA_BEGIN
  a = 1
  bbb = 10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_LLL_DATA_END
# TEST_ALIGN_1_PATTERN_LLL_EXPECTED_BEGIN
  a     = 1
  bbb   = 10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_LLL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_CCC_DATA_BEGIN
  a = 1
  bbb = 10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_CCC_DATA_END
# TEST_ALIGN_1_PATTERN_CCC_EXPECTED_BEGIN
    a   =  1
   bbb  = 10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_CCC_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_RRR_DATA_BEGIN
  a = 1
  bbb = 10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_RRR_DATA_END
# TEST_ALIGN_1_PATTERN_RRR_EXPECTED_BEGIN
      a =   1
    bbb =  10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_RRR_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_LCR_DATA_BEGIN
  a = 1
  bbb = 10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_LCR_DATA_END
# TEST_ALIGN_1_PATTERN_LCR_EXPECTED_BEGIN
  a     =   1
  bbb   =  10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_LCR_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_RCL_DATA_BEGIN
  a = 1
  bbb = 10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_RCL_DATA_END
# TEST_ALIGN_1_PATTERN_RCL_EXPECTED_BEGIN
      a = 1
    bbb = 10
  ccccc = 100
# TEST_ALIGN_1_PATTERN_RCL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_1_TIME_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_1_TIME_DATA_END
# TEST_ALIGN_1_PATTERN_1_TIME_EXPECTED_BEGIN
  a     = bbbbb = c = ddddd = 1
  aaa   = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_1_TIME_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_2_TIMES_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_DATA_END
# TEST_ALIGN_1_PATTERN_2_TIMES_EXPECTED_BEGIN
  a     = bbbbb = c = ddddd = 1
  aaa   = bbb   = ccc = ddd = 10
  aaaaa = b     = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_2_TIMES_LLL_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_LLL_DATA_END
# TEST_ALIGN_1_PATTERN_2_TIMES_LLL_EXPECTED_BEGIN
  a     = bbbbb = c = ddddd = 1
  aaa   = bbb   = ccc = ddd = 10
  aaaaa = b     = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_LLL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_2_TIMES_CCC_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_CCC_DATA_END
# TEST_ALIGN_1_PATTERN_2_TIMES_CCC_EXPECTED_BEGIN
    a   = bbbbb =  c = ddddd = 1
   aaa  =  bbb  = ccc = ddd = 10
  aaaaa =   b   = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_CCC_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_2_TIMES_RRR_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_RRR_DATA_END
# TEST_ALIGN_1_PATTERN_2_TIMES_RRR_EXPECTED_BEGIN
      a = bbbbb =   c = ddddd = 1
    aaa =   bbb =  ccc = ddd = 10
  aaaaa =     b = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_RRR_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_2_TIMES_LCR_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_LCR_DATA_END
# TEST_ALIGN_1_PATTERN_2_TIMES_LCR_EXPECTED_BEGIN
  a     = bbbbb =   c = ddddd = 1
  aaa   = bbb   =  ccc = ddd = 10
  aaaaa = b     = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_LCR_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_2_TIMES_RCL_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_RCL_DATA_END
# TEST_ALIGN_1_PATTERN_2_TIMES_RCL_EXPECTED_BEGIN
      a = bbbbb = c = ddddd = 1
    aaa =   bbb = ccc = ddd = 10
  aaaaa =     b = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_RCL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_N_TIMES_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d =100
# TEST_ALIGN_1_PATTERN_N_TIMES_DATA_END
# TEST_ALIGN_1_PATTERN_N_TIMES_EXPECTED_BEGIN
  a     = bbbbb = c     = ddddd = 1
  aaa   = bbb   = ccc   = ddd   = 10
  aaaaa = b     = ccccc = d     = 100
# TEST_ALIGN_1_PATTERN_N_TIMES_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_N_TIMES_LLL_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d =100
# TEST_ALIGN_1_PATTERN_N_TIMES_LLL_DATA_END
# TEST_ALIGN_1_PATTERN_N_TIMES_LLL_EXPECTED_BEGIN
  a     = bbbbb = c     = ddddd = 1
  aaa   = bbb   = ccc   = ddd   = 10
  aaaaa = b     = ccccc = d     = 100
# TEST_ALIGN_1_PATTERN_N_TIMES_LLL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_N_TIMES_CCC_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d =100
# TEST_ALIGN_1_PATTERN_N_TIMES_CCC_DATA_END
# TEST_ALIGN_1_PATTERN_N_TIMES_CCC_EXPECTED_BEGIN
    a   = bbbbb =   c   = ddddd =  1
   aaa  =  bbb  =  ccc  =  ddd  = 10
  aaaaa =   b   = ccccc =   d   = 100
# TEST_ALIGN_1_PATTERN_N_TIMES_CCC_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_N_TIMES_RRR_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d =100
# TEST_ALIGN_1_PATTERN_N_TIMES_RRR_DATA_END
# TEST_ALIGN_1_PATTERN_N_TIMES_RRR_EXPECTED_BEGIN
      a = bbbbb =     c = ddddd =   1
    aaa =   bbb =   ccc =   ddd =  10
  aaaaa =     b = ccccc =     d = 100
# TEST_ALIGN_1_PATTERN_N_TIMES_RRR_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_N_TIMES_LCR_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d =100
# TEST_ALIGN_1_PATTERN_N_TIMES_LCR_DATA_END
# TEST_ALIGN_1_PATTERN_N_TIMES_LCR_EXPECTED_BEGIN
  a     = bbbbb = c     = ddddd =   1
  aaa   = bbb   = ccc   = ddd   =  10
  aaaaa = b     = ccccc = d     = 100
# TEST_ALIGN_1_PATTERN_N_TIMES_LCR_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_N_TIMES_RCL_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d =100
# TEST_ALIGN_1_PATTERN_N_TIMES_RCL_DATA_END
# TEST_ALIGN_1_PATTERN_N_TIMES_RCL_EXPECTED_BEGIN
      a = bbbbb =     c = ddddd = 1
    aaa =   bbb =   ccc =   ddd = 10
  aaaaa =     b = ccccc =     d = 100
# TEST_ALIGN_1_PATTERN_N_TIMES_RCL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MULTI_PATTERNS_DATA_BEGIN
  a = 1 /* AAAAA */
  bbb = 10 /* BBB */
  ccccc = 100 /* C */
# TEST_ALIGN_MULTI_PATTERNS_DATA_END
# TEST_ALIGN_MULTI_PATTERNS_EXPECTED_BEGIN
  a     = 1   /* AAAAA */
  bbb   = 10  /* BBB   */
  ccccc = 100 /* C     */
# TEST_ALIGN_MULTI_PATTERNS_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MULTI_PATTERNS_LLL_DATA_BEGIN
  a = 1 /* AAAAA */
  bbb = 10 /* BBB */
  ccccc = 100 /* C */
# TEST_ALIGN_MULTI_PATTERNS_LLL_DATA_END
# TEST_ALIGN_MULTI_PATTERNS_LLL_EXPECTED_BEGIN
  a     = 1   /* AAAAA */
  bbb   = 10  /* BBB   */
  ccccc = 100 /* C     */
# TEST_ALIGN_MULTI_PATTERNS_LLL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MULTI_PATTERNS_CCC_DATA_BEGIN
  a = 1 /* AAAAA */
  bbb = 10 /* BBB */
  ccccc = 100 /* C */
# TEST_ALIGN_MULTI_PATTERNS_CCC_DATA_END
# TEST_ALIGN_MULTI_PATTERNS_CCC_EXPECTED_BEGIN
    a   =  1  /* AAAAA */
   bbb  = 10  /*  BBB  */
  ccccc = 100 /*   C   */
# TEST_ALIGN_MULTI_PATTERNS_CCC_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MULTI_PATTERNS_RRR_DATA_BEGIN
  a = 1 /* AAAAA */
  bbb = 10 /* BBB */
  ccccc = 100 /* C */
# TEST_ALIGN_MULTI_PATTERNS_RRR_DATA_END
# TEST_ALIGN_MULTI_PATTERNS_RRR_EXPECTED_BEGIN
      a =   1 /* AAAAA */
    bbb =  10 /*   BBB */
  ccccc = 100 /*     C */
# TEST_ALIGN_MULTI_PATTERNS_RRR_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MULTI_PATTERNS_LCR_DATA_BEGIN
  a = 1 /* AAAAA */
  bbb = 10 /* BBB */
  ccccc = 100 /* C */
# TEST_ALIGN_MULTI_PATTERNS_LCR_DATA_END
# TEST_ALIGN_MULTI_PATTERNS_LCR_EXPECTED_BEGIN
  a     = 1   /* AAAAA */
  bbb   = 10  /* BBB   */
  ccccc = 100 /* C     */
# TEST_ALIGN_MULTI_PATTERNS_LCR_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MULTI_PATTERNS_RCL_DATA_BEGIN
  a = 1 /* AAAAA */
  bbb = 10 /* BBB */
  ccccc = 100 /* C */
# TEST_ALIGN_MULTI_PATTERNS_RCL_DATA_END
# TEST_ALIGN_MULTI_PATTERNS_RCL_EXPECTED_BEGIN
      a =   1 /* AAAAA */
    bbb =  10 /*   BBB */
  ccccc = 100 /*     C */
# TEST_ALIGN_MULTI_PATTERNS_RCL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_DATA_BEGIN
  a = 1 /* AAAAA */
  A : 2 /* aaaaa */
  bbb = 10 /* BBB */
  BBB : 20 /* bbb */
  ccccc = 100 /* C */
  CCCCC : 200 /* c */
  func() /* FUNC */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_DATA_END
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_EXPECTED_BEGIN
  a     = 1   /* AAAAA */
  A     : 2   /* aaaaa */
  bbb   = 10  /* BBB   */
  BBB   : 20  /* bbb   */
  ccccc = 100 /* C     */
  CCCCC : 200 /* c     */
  func()      /* FUNC  */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_LLL_DATA_BEGIN
  a = 1 /* AAAAA */
  A : 2 /* aaaaa */
  bbb = 10 /* BBB */
  BBB : 20 /* bbb */
  ccccc = 100 /* C */
  CCCCC : 200 /* c */
  func() /* FUNC */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_LLL_DATA_END
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_LLL_EXPECTED_BEGIN
  a     = 1   /* AAAAA */
  A     : 2   /* aaaaa */
  bbb   = 10  /* BBB   */
  BBB   : 20  /* bbb   */
  ccccc = 100 /* C     */
  CCCCC : 200 /* c     */
  func()      /* FUNC  */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_LLL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_CCC_DATA_BEGIN
  a = 1 /* AAAAA */
  A : 2 /* aaaaa */
  bbb = 10 /* BBB */
  BBB : 20 /* bbb */
  ccccc = 100 /* C */
  CCCCC : 200 /* c */
  func() /* FUNC */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_CCC_DATA_END
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_CCC_EXPECTED_BEGIN
    a   =  1  /* AAAAA */
    A   :  2  /* aaaaa */
   bbb  = 10  /*  BBB  */
   BBB  : 20  /*  bbb  */
  ccccc = 100 /*   C   */
  CCCCC : 200 /*   c   */
    func()    /* FUNC  */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_CCC_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_RRR_DATA_BEGIN
  a = 1 /* AAAAA */
  A : 2 /* aaaaa */
  bbb = 10 /* BBB */
  BBB : 20 /* bbb */
  ccccc = 100 /* C */
  CCCCC : 200 /* c */
  func() /* FUNC */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_RRR_DATA_END
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_RRR_EXPECTED_BEGIN
      a =   1 /* AAAAA */
      A :   2 /* aaaaa */
    bbb =  10 /*   BBB */
    BBB :  20 /*   bbb */
  ccccc = 100 /*     C */
  CCCCC : 200 /*     c */
       func() /*  FUNC */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_RRR_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_LCR_DATA_BEGIN
  a = 1 /* AAAAA */
  A : 2 /* aaaaa */
  bbb = 10 /* BBB */
  BBB : 20 /* bbb */
  ccccc = 100 /* C */
  CCCCC : 200 /* c */
  func() /* FUNC */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_LCR_DATA_END
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_LCR_EXPECTED_BEGIN
  a     = 1   /* AAAAA */
  A     : 2   /* aaaaa */
  bbb   = 10  /* BBB   */
  BBB   : 20  /* bbb   */
  ccccc = 100 /* C     */
  CCCCC : 200 /* c     */
  func()      /* FUNC  */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_LCR_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_RCL_DATA_BEGIN
  a = 1 /* AAAAA */
  A : 2 /* aaaaa */
  bbb = 10 /* BBB */
  BBB : 20 /* bbb */
  ccccc = 100 /* C */
  CCCCC : 200 /* c */
  func() /* FUNC */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_RCL_DATA_END
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_RCL_EXPECTED_BEGIN
      a =   1 /* AAAAA */
      A :   2 /* aaaaa */
    bbb =  10 /*   BBB */
    BBB :  20 /*   bbb */
  ccccc = 100 /*     C */
  CCCCC : 200 /*     c */
       func() /*  FUNC */
# TEST_ALIGN_COMPLEX_MULTI_PATTERNS_RCL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_BLANK_L_FLDS_DATA_BEGIN
  a = 1
    bbb = 10
      ccccc = 100
# TEST_ALIGN_BLANK_L_FLDS_DATA_END
# TEST_ALIGN_BLANK_L_FLDS_EXPECTED_BEGIN
  a     = 1
  bbb   = 10
  ccccc = 100
# TEST_ALIGN_BLANK_L_FLDS_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_ALIGNED_WIDTH_DATA_BEGIN
  a a a
  bbb bbb
  ccccc ccccc
# TEST_ALIGN_ALIGNED_WIDTH_DATA_END
# TEST_ALIGN_ALIGNED_WIDTH_EXPECTED_BEGIN
  a     a     a
  bbb   bbb
  ccccc ccccc
# TEST_ALIGN_ALIGNED_WIDTH_EXPECTED_END

#-----------------------------------------------------------------------------
# Block

#---------------------------------------
# TEST_ALIGN_BLOCK_DATA_BEGIN
  *** a = 1       ***
  *** bbb = 10    ***
  *** ccccc = 100 ***
# TEST_ALIGN_BLOCK_DATA_END
# TEST_ALIGN_BLOCK_EXPECTED_BEGIN
  *** a     = 1   ***
  *** bbb   = 10  ***
  *** ccccc = 100 ***
# TEST_ALIGN_BLOCK_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_BLOCK_WITH_RAGGED_RIGHTS_DATA_BEGIN
  *** a = 1       ***

  *** bbb = 10    ***

  *** ccccc = 100 ***
# TEST_ALIGN_BLOCK_WITH_RAGGED_RIGHTS_DATA_END
# TEST_ALIGN_BLOCK_WITH_RAGGED_RIGHTS_EXPECTED_BEGIN
  *** a     = 1   ***

  *** bbb   = 10  ***

  *** ccccc = 100 ***
# TEST_ALIGN_BLOCK_WITH_RAGGED_RIGHTS_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_BLOCK_WITH_SHORT_RIGHTS_DATA_BEGIN
  *** a = 1       ***
  *** bbb = 10
  *** bbb = 10
  *** ccccc = 100 ***
# TEST_ALIGN_BLOCK_WITH_SHORT_RIGHTS_DATA_END
# TEST_ALIGN_BLOCK_WITH_SHORT_RIGHTS_EXPECTED_BEGIN
  *** a     = 1   ***
  *** bbb   = 10
  *** bbb   = 10
  *** ccccc = 100 ***
# TEST_ALIGN_BLOCK_WITH_SHORT_RIGHTS_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_BLOCK_HAS_TAB_DATA_BEGIN
  ***	a			=	1		***
  ***	bbb		=	10	***
  ***	ccccc	=	100	***
# TEST_ALIGN_BLOCK_HAS_TAB_DATA_END

#-----------------------------------------------------------------------------
# Padding

#---------------------------------------
# TEST_ALIGN_0PAD_DATA_BEGIN
  a = 1
  bbb = 10
  ccccc = 100
# TEST_ALIGN_0PAD_DATA_END
# TEST_ALIGN_0PAD_EXPECTED_BEGIN
  a    =1
  bbb  =10
  ccccc=100
# TEST_ALIGN_0PAD_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_3PAD_DATA_BEGIN
  a = 1
  bbb = 10
  ccccc = 100
# TEST_ALIGN_3PAD_DATA_END
# TEST_ALIGN_3PAD_EXPECTED_BEGIN
  a       =   1
  bbb     =   10
  ccccc   =   100
# TEST_ALIGN_3PAD_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_LPAD_DATA_BEGIN
  a = 1
  bbb = 10
  ccccc = 100
# TEST_ALIGN_LPAD_DATA_END
# TEST_ALIGN_LPAD_EXPECTED_BEGIN
  a       = 1
  bbb     = 10
  ccccc   = 100
# TEST_ALIGN_LPAD_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_RPAD_DATA_BEGIN
  a = 1
  bbb = 10
  ccccc = 100
# TEST_ALIGN_RPAD_DATA_END
# TEST_ALIGN_RPAD_EXPECTED_BEGIN
  a     =   1
  bbb   =   10
  ccccc =   100
# TEST_ALIGN_RPAD_EXPECTED_END

#-----------------------------------------------------------------------------
# Regex

#---------------------------------------
# TEST_ALIGN_REGEX_1_PATTERN_DATA_BEGIN
  a 1
  bbb 20
  ccccc 300
# TEST_ALIGN_REGEX_1_PATTERN_DATA_END
# TEST_ALIGN_REGEX_1_PATTERN_EXPECTED_BEGIN
  a     1
  bbb   20
  ccccc 300
# TEST_ALIGN_REGEX_1_PATTERN_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_REGEX_1_PATTERN_2_TIMES_DATA_BEGIN
  a 1 100 1 100
  bbb 20 20 20 20
  ccccc 300 3 300 3
# TEST_ALIGN_REGEX_1_PATTERN_2_TIMES_DATA_END
# TEST_ALIGN_REGEX_1_PATTERN_2_TIMES_EXPECTED_BEGIN
  a     1   100 1 100
  bbb   20  20  20 20
  ccccc 300 3   300 3
# TEST_ALIGN_REGEX_1_PATTERN_2_TIMES_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_REGEX_1_PATTERN_N_TIMES_DATA_BEGIN
  a 1 100 1 100
  bbb 20 20 20 20
  ccccc 300 3 300 3
# TEST_ALIGN_REGEX_1_PATTERN_N_TIMES_DATA_END
# TEST_ALIGN_REGEX_1_PATTERN_N_TIMES_EXPECTED_BEGIN
  a     1   100 1   100
  bbb   20  20  20  20
  ccccc 300 3   300 3
# TEST_ALIGN_REGEX_1_PATTERN_N_TIMES_EXPECTED_END

#-----------------------------------------------------------------------------
# Tabs

#---------------------------------------
# TEST_ALIGN_REGION_HAS_TAB_DATA_BEGIN
  a = 1
	tab	=	10
	tab	=	11
  ccccc = 100
# TEST_ALIGN_REGION_HAS_TAB_DATA_END
# TEST_ALIGN_REGION_HAS_TAB_EXPECTED_BEGIN
  a     = 1
  tab   = 10
  tab   = 11
  ccccc = 100
# TEST_ALIGN_REGION_HAS_TAB_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_REGION_HAS_TAB_NOEXPANDTAB_DATA_BEGIN
  a = 1
	tab	=	10
	tab	=	11
  ccccc = 100
# TEST_ALIGN_REGION_HAS_TAB_NOEXPANDTAB_DATA_END
# TEST_ALIGN_REGION_HAS_TAB_NOEXPANDTAB_EXPECTED_BEGIN
	a     = 1
	tab   = 10
	tab   = 11
	ccccc = 100
# TEST_ALIGN_REGION_HAS_TAB_NOEXPANDTAB_EXPECTED_END

#=============================================================================
# Shifting Alignment

#---------------------------------------
# TEST_ALIGN_SHIFT_1_PATTERN_DATA_BEGIN
  a b c
  aaa bbb ccc
  aaaaa bbbbb ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_DATA_END
# TEST_ALIGN_SHIFT_1_PATTERN_EXPECTED_BEGIN
  a     b c
  aaa   bbb ccc
  aaaaa bbbbb ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_SHIFT_1_PATTERN_L_DATA_BEGIN
  a b c
  aaa bbb ccc
  aaaaa bbbbb ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_L_DATA_END
# TEST_ALIGN_SHIFT_1_PATTERN_L_EXPECTED_BEGIN
  a     b c
  aaa   bbb ccc
  aaaaa bbbbb ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_L_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_SHIFT_1_PATTERN_C_DATA_BEGIN
  a b c
  aaa bbb ccc
  aaaaa bbbbb ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_C_DATA_END
# TEST_ALIGN_SHIFT_1_PATTERN_C_EXPECTED_BEGIN
    a   b c
   aaa  bbb ccc
  aaaaa bbbbb ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_C_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_SHIFT_1_PATTERN_R_DATA_BEGIN
  a b c
  aaa bbb ccc
  aaaaa bbbbb ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_R_DATA_END
# TEST_ALIGN_SHIFT_1_PATTERN_R_EXPECTED_BEGIN
      a b c
    aaa bbb ccc
  aaaaa bbbbb ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_R_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_SHIFT_1_PATTERN_2_TIMES_DATA_BEGIN
  a b bbbbb c
  aaa bbb bbb ccc
  aaaaa bbbbb b ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_2_TIMES_DATA_END
# TEST_ALIGN_SHIFT_1_PATTERN_2_TIMES_EXPECTED_BEGIN
  a     b     bbbbb c
  aaa   bbb   bbb ccc
  aaaaa bbbbb b ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_2_TIMES_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_SHIFT_1_PATTERN_N_TIMES_DATA_BEGIN
  a b bbbbb b bbbbb c
  aaa bbb bbb bbb bbb ccc
  aaaaa bbbbb b bbbbb b ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_N_TIMES_DATA_END
# TEST_ALIGN_SHIFT_1_PATTERN_N_TIMES_EXPECTED_BEGIN
  a     b     bbbbb b     bbbbb c
  aaa   bbb   bbb   bbb   bbb ccc
  aaaaa bbbbb b     bbbbb b ccccc
# TEST_ALIGN_SHIFT_1_PATTERN_N_TIMES_EXPECTED_END

#-----------------------------------------------------------------------------
# Block

#---------------------------------------
# TEST_ALIGN_SHIFT_BLOCK_DATA_BEGIN
  *** a b c             ***
  *** aaa bbb ccc       ***
  *** aaaaa bbbbb ccccc ***
# TEST_ALIGN_SHIFT_BLOCK_DATA_END
# TEST_ALIGN_SHIFT_BLOCK_EXPECTED_BEGIN
  *** a     b c         ***
  *** aaa   bbb ccc     ***
  *** aaaaa bbbbb ccccc ***
# TEST_ALIGN_SHIFT_BLOCK_EXPECTED_END

#-----------------------------------------------------------------------------
# Padding

#---------------------------------------
# TEST_ALIGN_SHIFT_0PAD_DATA_BEGIN
  a b c
  aaa bbb ccc
  aaaaa bbbbb ccccc
# TEST_ALIGN_SHIFT_0PAD_DATA_END
# TEST_ALIGN_SHIFT_0PAD_EXPECTED_BEGIN
  a    b c
  aaa  bbb ccc
  aaaaabbbbb ccccc
# TEST_ALIGN_SHIFT_0PAD_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_SHIFT_3PAD_DATA_BEGIN
  a b c
  aaa bbb ccc
  aaaaa bbbbb ccccc
# TEST_ALIGN_SHIFT_3PAD_DATA_END
# TEST_ALIGN_SHIFT_3PAD_EXPECTED_BEGIN
  a       b c
  aaa     bbb ccc
  aaaaa   bbbbb ccccc
# TEST_ALIGN_SHIFT_3PAD_EXPECTED_END

#=============================================================================
# Multi-byte

#---------------------------------------
# TEST_ALIGN_MB_1_PATTERN_DATA_BEGIN
  あ ＝ 壱
  あいう ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_DATA_END
# TEST_ALIGN_MB_1_PATTERN_EXPECTED_BEGIN
  あ         ＝ 壱
  あいう     ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MB_1_PATTERN_LLL_DATA_BEGIN
  あ ＝ 壱
  あいう ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_LLL_DATA_END
# TEST_ALIGN_MB_1_PATTERN_LLL_EXPECTED_BEGIN
  あ         ＝ 壱
  あいう     ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_LLL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MB_1_PATTERN_CCC_DATA_BEGIN
  あ ＝ 壱
  あいう ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_CCC_DATA_END
# TEST_ALIGN_MB_1_PATTERN_CCC_EXPECTED_BEGIN
      あ     ＝   壱
    あいう   ＝  壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_CCC_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MB_1_PATTERN_RRR_DATA_BEGIN
  あ ＝ 壱
  あいう ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_RRR_DATA_END
# TEST_ALIGN_MB_1_PATTERN_RRR_EXPECTED_BEGIN
          あ ＝     壱
      あいう ＝   壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_RRR_EXPECTED_END

#-----------------------------------------------------------------------------
# Block

#---------------------------------------
# TEST_ALIGN_MB_BLOCK_DATA_BEGIN
  外外外 あ ＝ 壱             *外外外
  外外外 あいう ＝ 壱十       *外外外
  外外外 あいうえお ＝ 壱十百 *外外外
# TEST_ALIGN_MB_BLOCK_DATA_END
# TEST_ALIGN_MB_BLOCK_EXPECTED_BEGIN
  外外外 あ         ＝ 壱     *外外外
  外外外 あいう     ＝ 壱十   *外外外
  外外外 あいうえお ＝ 壱十百 *外外外
# TEST_ALIGN_MB_BLOCK_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MB_BLOCK_IS_BROKEN_DATA_BEGIN
  word word word word word word word word
   単語 単語 単語 単語 単語 単語 単語 単語
  word word word word word word word word
# TEST_ALIGN_MB_BLOCK_IS_BROKEN_DATA_END

#=============================================================================
# Misc

#-----------------------------------------------------------------------------
# -p

#---------------------------------------
# TEST_ALIGN_PATTERN_ESCAPE_DATA_BEGIN
  a <<< 1
  bbb <<< 10
  ccccc <<< 100
# TEST_ALIGN_PATTERN_ESCAPE_DATA_END
# TEST_ALIGN_PATTERN_ESCAPE_EXPECTED_BEGIN
  a     <<< 1
  bbb   <<< 10
  ccccc <<< 100
# TEST_ALIGN_PATTERN_ESCAPE_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_PATTERN_ESCAPE_ESCAPE_DATA_BEGIN
  a -p 1
  bbb -p 10
  ccccc -p 100
# TEST_ALIGN_PATTERN_ESCAPE_ESCAPE_DATA_END
# TEST_ALIGN_PATTERN_ESCAPE_ESCAPE_EXPECTED_BEGIN
  a     -p 1
  bbb   -p 10
  ccccc -p 100
# TEST_ALIGN_PATTERN_ESCAPE_ESCAPE_EXPECTED_END

# vim: filetype=conf: ai
