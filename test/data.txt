# alignta.vim test suite

#=============================================================================
# ASCII

#---------------------------------------
# TEST_ALIGN_1_PATTERN_DATA_BEGIN
  a = 1
  aaa = 10
  aaaaa = 100
# TEST_ALIGN_1_PATTERN_DATA_END
# TEST_ALIGN_1_PATTERN_EXPECTED_BEGIN
  a     = 1
  aaa   = 10
  aaaaa = 100
# TEST_ALIGN_1_PATTERN_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_LLL_DATA_BEGIN
  a = 1
  aaa = 10
  aaaaa = 100
# TEST_ALIGN_1_PATTERN_LLL_DATA_END
# TEST_ALIGN_1_PATTERN_LLL_EXPECTED_BEGIN
  a     = 1
  aaa   = 10
  aaaaa = 100
# TEST_ALIGN_1_PATTERN_LLL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_CCC_DATA_BEGIN
  a = 1
  aaa = 10
  aaaaa = 100
# TEST_ALIGN_1_PATTERN_CCC_DATA_END
# TEST_ALIGN_1_PATTERN_CCC_EXPECTED_BEGIN
    a   =  1
   aaa  = 10
  aaaaa = 100
# TEST_ALIGN_1_PATTERN_CCC_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_RRR_DATA_BEGIN
  a = 1
  aaa = 10
  aaaaa = 100
# TEST_ALIGN_1_PATTERN_RRR_DATA_END
# TEST_ALIGN_1_PATTERN_RRR_EXPECTED_BEGIN
      a =   1
    aaa =  10
  aaaaa = 100
# TEST_ALIGN_1_PATTERN_RRR_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_2_TIMES_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_DATA_END
# TEST_ALIGN_1_PATTERN_2_TIMES_EXPECTED_BEGIN
  a     = bbbbb = c = ddddd = 1
  aaa   = bbb   = ccc = ddd = 10
  aaaaa = b     = ccccc = d = 100
# TEST_ALIGN_1_PATTERN_2_TIMES_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_1_PATTERN_N_TIMES_DATA_BEGIN
  a = bbbbb = c = ddddd = 1
  aaa = bbb = ccc = ddd = 10
  aaaaa = b = ccccc = d =100
# TEST_ALIGN_1_PATTERN_N_TIMES_DATA_END
# TEST_ALIGN_1_PATTERN_N_TIMES_EXPECTED_BEGIN
  a     = bbbbb = c     = ddddd = 1
  aaa   = bbb   = ccc   = ddd   = 10
  aaaaa = b     = ccccc = d     = 100
# TEST_ALIGN_1_PATTERN_N_TIMES_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MULTI_PATTERNS_DATA_BEGIN
  a = 1 /* bbbbb */
  aaa = 10 /* bbb */
  aaaaa = 100 /* b*/
# TEST_ALIGN_MULTI_PATTERNS_DATA_END
# TEST_ALIGN_MULTI_PATTERNS_EXPECTED_BEGIN
  a     = 1   /* bbbbb */
  aaa   = 10  /* bbb   */
  aaaaa = 100 /* b     */
# TEST_ALIGN_MULTI_PATTERNS_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_BLANK_LFLDS_DATA_BEGIN
  a = 1
    aaa = 10
      aaaaa = 100
# TEST_ALIGN_BLANK_LFLDS_DATA_END
# TEST_ALIGN_BLANK_LFLDS_EXPECTED_BEGIN
  a     = 1
  aaa   = 10
  aaaaa = 100
# TEST_ALIGN_BLANK_LFLDS_EXPECTED_END

#-----------------------------------------------------------------------------
# Regex

#---------------------------------------
# TEST_ALIGN_REGEX_1_PATTERN_DATA_BEGIN
  a 1
  aaa 20
  aaaaa 300
# TEST_ALIGN_REGEX_1_PATTERN_DATA_END
# TEST_ALIGN_REGEX_1_PATTERN_EXPECTED_BEGIN
  a     1
  aaa   20
  aaaaa 300
# TEST_ALIGN_REGEX_1_PATTERN_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_REGEX_1_PATTERN_2_TIMES_DATA_BEGIN
  a 1 100 1 100
  aaa 20 20 20 20
  aaaaa 300 3 300 3
# TEST_ALIGN_REGEX_1_PATTERN_2_TIMES_DATA_END
# TEST_ALIGN_REGEX_1_PATTERN_2_TIMES_EXPECTED_BEGIN
  a     1   100 1 100
  aaa   20  20  20 20
  aaaaa 300 3   300 3
# TEST_ALIGN_REGEX_1_PATTERN_2_TIMES_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_REGEX_1_PATTERN_N_TIMES_DATA_BEGIN
  a 1 100 1 100
  aaa 20 20 20 20
  aaaaa 300 3 300 3
# TEST_ALIGN_REGEX_1_PATTERN_N_TIMES_DATA_END
# TEST_ALIGN_REGEX_1_PATTERN_N_TIMES_EXPECTED_BEGIN
  a     1   100 1   100
  aaa   20  20  20  20
  aaaaa 300 3   300 3
# TEST_ALIGN_REGEX_1_PATTERN_N_TIMES_EXPECTED_END

#-----------------------------------------------------------------------------
# Tabs

#---------------------------------------
# TEST_ALIGN_INDENT_TABS_DATA_BEGIN
  a = 1
	aaa = 10
  aaaaa = 100
# TEST_ALIGN_INDENT_TABS_DATA_END
# TEST_ALIGN_INDENT_TABS_EXPECTED_BEGIN
  a     = 1
  aaa   = 10
  aaaaa = 100
# TEST_ALIGN_INDENT_TABS_EXPECTED_END

#-----------------------------------------------------------------------------
# Padding

#---------------------------------------
# TEST_ALIGN_0PAD_DATA_BEGIN
  a = 1
  aaa = 10
  aaaaa = 100
# TEST_ALIGN_0PAD_DATA_END
# TEST_ALIGN_0PAD_EXPECTED_BEGIN
  a    =1
  aaa  =10
  aaaaa=100
# TEST_ALIGN_0PAD_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_3PAD_DATA_BEGIN
  a = 1
  aaa = 10
  aaaaa = 100
# TEST_ALIGN_3PAD_DATA_END
# TEST_ALIGN_3PAD_EXPECTED_BEGIN
  a       =   1
  aaa     =   10
  aaaaa   =   100
# TEST_ALIGN_3PAD_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_LPAD_DATA_BEGIN
  a = 1
  aaa = 10
  aaaaa = 100
# TEST_ALIGN_LPAD_DATA_END
# TEST_ALIGN_LPAD_EXPECTED_BEGIN
  a       = 1
  aaa     = 10
  aaaaa   = 100
# TEST_ALIGN_LPAD_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_RPAD_DATA_BEGIN
  a = 1
  aaa = 10
  aaaaa = 100
# TEST_ALIGN_RPAD_DATA_END
# TEST_ALIGN_RPAD_EXPECTED_BEGIN
  a     =   1
  aaa   =   10
  aaaaa =   100
# TEST_ALIGN_RPAD_EXPECTED_END

#-----------------------------------------------------------------------------
# Block

#---------------------------------------
# TEST_ALIGN_BLOCK_DATA_BEGIN
  *** a = 1       ***
  *** aaa = 10    ***
  *** aaaaa = 100 ***
# TEST_ALIGN_BLOCK_DATA_END
# TEST_ALIGN_BLOCK_EXPECTED_BEGIN
  *** a     = 1   ***
  *** aaa   = 10  ***
  *** aaaaa = 100 ***
# TEST_ALIGN_BLOCK_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_BLOCK_WITH_RAGGED_RIGHTS_DATA_BEGIN
  *** a = 1       ***

  *** aaa = 10    ***

  *** aaaaa = 100 ***
# TEST_ALIGN_BLOCK_WITH_RAGGED_RIGHTS_DATA_END
# TEST_ALIGN_BLOCK_WITH_RAGGED_RIGHTS_EXPECTED_BEGIN
  *** a     = 1   ***

  *** aaa   = 10  ***

  *** aaaaa = 100 ***
# TEST_ALIGN_BLOCK_WITH_RAGGED_RIGHTS_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_BLOCK_WITH_SHORT_RIGHTS_DATA_BEGIN
  *** a = 1       ***
  *** aaa = 10
  *** bbb = 10
  *** aaaaa = 100 ***
# TEST_ALIGN_BLOCK_WITH_SHORT_RIGHTS_DATA_END
# TEST_ALIGN_BLOCK_WITH_SHORT_RIGHTS_EXPECTED_BEGIN
  *** a     = 1   ***
  *** aaa   = 10
  *** bbb   = 10
  *** aaaaa = 100 ***
# TEST_ALIGN_BLOCK_WITH_SHORT_RIGHTS_EXPECTED_END

#=============================================================================
# Multi-byte

#---------------------------------------
# TEST_ALIGN_MB_1_PATTERN_DATA_BEGIN
  あ ＝ 壱
  あいう ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_DATA_END
# TEST_ALIGN_MB_1_PATTERN_EXPECTED_BEGIN
  あ         ＝ 壱
  あいう     ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MB_1_PATTERN_LLL_DATA_BEGIN
  あ ＝ 壱
  あいう ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_LLL_DATA_END
# TEST_ALIGN_MB_1_PATTERN_LLL_EXPECTED_BEGIN
  あ         ＝ 壱
  あいう     ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_LLL_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MB_1_PATTERN_CCC_DATA_BEGIN
  あ ＝ 壱
  あいう ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_CCC_DATA_END
# TEST_ALIGN_MB_1_PATTERN_CCC_EXPECTED_BEGIN
      あ     ＝   壱
    あいう   ＝  壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_CCC_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MB_1_PATTERN_RRR_DATA_BEGIN
  あ ＝ 壱
  あいう ＝ 壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_RRR_DATA_END
# TEST_ALIGN_MB_1_PATTERN_RRR_EXPECTED_BEGIN
          あ ＝     壱
      あいう ＝   壱十
  あいうえお ＝ 壱十百
# TEST_ALIGN_MB_1_PATTERN_RRR_EXPECTED_END

#-----------------------------------------------------------------------------
# Block

#---------------------------------------
# TEST_ALIGN_MB_BLOCK_DATA_BEGIN
  外外外 あ ＝ 壱             *外外外
  外外外 あいう ＝ 壱十       *外外外
  外外外 あいうえお ＝ 壱十百 *外外外
# TEST_ALIGN_MB_BLOCK_DATA_END
# TEST_ALIGN_MB_BLOCK_EXPECTED_BEGIN
  外外外 あ         ＝ 壱     *外外外
  外外外 あいう     ＝ 壱十   *外外外
  外外外 あいうえお ＝ 壱十百 *外外外
# TEST_ALIGN_MB_BLOCK_EXPECTED_END

#---------------------------------------
# TEST_ALIGN_MB_BLOCK_IS_BROKEN_DATA_BEGIN
  word word word word word word word word
   単語 単語 単語 単語 単語 単語 単語 単語
  word word word word word word word word
# TEST_ALIGN_MB_BLOCK_IS_BROKEN_DATA_END

# vim: filetype=conf
